datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  username  String   @unique
  email     String   @unique
  password  String?  // opsional untuk user Google
  googleId  String?  @unique
  isActive  Boolean  @default(false)
  activationToken String?
  profile   UserProfile?
  profileId Int?
  courses   Course[] @relation("CreatedCourses")
  purchases Purchase[]
  reviews   Review[]
}

model UserProfile {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  bio       String
  avatar    String?
  website   String?
  github    String?
  linkedin  String?
  twitter   String?
  youtube   String?
  userId    Int      @unique
  user      User @relation(fields: [userId], references: [id])
}

model Course {
  id             Int              @id @default(autoincrement())
  title          String
  description    String
  image          String
  price          Int
  discount       Int?
  creatorId      Int
  creator        User             @relation("CreatedCourses", fields: [creatorId], references: [id])
  categoryId     Int
  category       Category         @relation(fields: [categoryId], references: [id])
  purchases      Purchase[]
  reviews        Review[]
  viewStats      CourseViewStat[]
  modules        Module[]         // Relasi baru
  createdAt      DateTime         @default(now())
}

model Module {
  id        Int      @id @default(autoincrement())
  title     String
  courseId  Int
  course    Course   @relation(fields: [courseId], references: [id])
  lessons   Lesson[]
  position  Int      // Urutan modul
}

model Lesson {
  id        Int      @id @default(autoincrement())
  title     String
  content   String   // Bisa berupa teks, HTML, atau link ke video
  moduleId  Int
  module    Module   @relation(fields: [moduleId], references: [id])
  position  Int      // Urutan lesson
}


model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  courses Course[]
}

model CourseViewStat {
  id        Int      @id @default(autoincrement())
  courseId  Int
  views     Int      @default(0)
  favorites Int      @default(0)
  enrolls   Int      @default(0)
  course    Course   @relation(fields: [courseId], references: [id])
}

model Purchase {
  id        Int      @id @default(autoincrement())
  userId    Int
  courseId  Int
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String
  userId    Int
  courseId  Int
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, courseId])
}

